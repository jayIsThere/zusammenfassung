<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Framework on Jays Zusammenfassung</title>
    <link>https://jayIsThere.github.io/zusammenfassung/tags/framework/</link>
    <description>Recent content in Framework on Jays Zusammenfassung</description>
    <generator>Hugo -- 0.146.5</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Apr 2025 18:04:15 +0200</lastBuildDate>
    <atom:link href="https://jayIsThere.github.io/zusammenfassung/tags/framework/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vorlesung 2: Wiederverwendung von Software 2</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/kbe/kbe2/</link>
      <pubDate>Thu, 10 Apr 2025 18:04:15 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/kbe/kbe2/</guid>
      <description>&lt;h3 id=&#34;wiederverwendungstechniken-laut-sommerville&#34;&gt;Wiederverwendungstechniken (laut Sommerville)&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Frameworks&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Definition:&lt;/strong&gt; Ein Framework ist ein Set von Softwarekomponenten, das eine Architektur für verwandte Anwendungen bereitstellt.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beispiel:&lt;/strong&gt; Ein Web-Framework wie Spring MVC verwendet das Model-View-Controller-Muster.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Eigenschaft:&lt;/strong&gt; Bietet generische Funktionalität und wird erweitert, nicht ersetzt.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Inversion of Control (IoC)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prinzip:&lt;/strong&gt; Die Steuerung liegt beim Framework, nicht bei der Anwendung. Die Anwendung registriert ihre Komponenten, und das Framework ruft sie bei Bedarf auf.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beispiel:&lt;/strong&gt; Callbacks in Web-Frameworks.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Entwurfsmuster&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Beispiel:&lt;/strong&gt; Observer, Strategy sind gängige Muster, um wiederkehrende Probleme zu lösen.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Architekturmuster&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
