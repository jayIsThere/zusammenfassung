<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Framework on Jays Zusammenfassung</title>
    <link>https://jayIsThere.github.io/zusammenfassung/tags/framework/</link>
    <description>Recent content in Framework on Jays Zusammenfassung</description>
    <generator>Hugo -- 0.146.6</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Apr 2025 18:04:15 +0200</lastBuildDate>
    <atom:link href="https://jayIsThere.github.io/zusammenfassung/tags/framework/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vorlesung 2: Wiederverwendung von Software 2</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/kbe/kbe2/</link>
      <pubDate>Thu, 10 Apr 2025 18:04:15 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/kbe/kbe2/</guid>
      <description>&lt;h3 id=&#34;-wiederverwendungstechniken-nach-sommerville&#34;&gt;🔁 Wiederverwendungstechniken (nach Sommerville)&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;strong&gt;Technik&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Beschreibung &amp;amp; Beispiel&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Frameworks&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Architektur für verwandte Anwendungen. z. B. Spring MVC mit MVC-Muster&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Inversion of Control&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Steuerung durch Framework, z. B. Callbacks&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Entwurfsmuster&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Lösung wiederkehrender Probleme – z. B. Observer, Strategy&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Architekturmuster&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Struktur ganzer Systeme – z. B. Microservices&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;ERP-Systeme&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Konfigurierbare Geschäftssysteme – z. B. SAP&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Komponentenbasiert&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Austauschbare Module, klare Schnittstellen&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Modellgetrieben&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Generierung aus Modellen (plattformunabhängig)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Serviceorientiert&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Verteilte Webservices – z. B. REST, SOAP&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Softwareproduktlinien&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Gemeinsame Codebasis mit variabler Konfiguration&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;-framework-klassifizierung-fayad--schmidt&#34;&gt;🧱 Framework-Klassifizierung (Fayad &amp;amp; Schmidt)&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;strong&gt;Typ&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Beispiele&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Systeminfrastruktur&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;GUI, Compiler, Kommunikationsframeworks&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Middleware-Integration&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Jakarta EE, .NET&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Unternehmensanwendungen&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Branchenspezifisch: Telekom, Finanzen etc.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;-wiederverwendung-von-anwendungssystemen&#34;&gt;🧩 Wiederverwendung von Anwendungssystemen&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;strong&gt;Typ&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Beschreibung&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Softwareproduktlinien&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Gemeinsamer Kern mit variablen, anpassbaren Komponenten&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Konfigurierbare Systeme&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Systeme, die über Parameter oder Module an spezifische Bedürfnisse angepasst werden können (z. B. ERP)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Integrierte Systeme&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Kombination verschiedener Anwendungen über Schnittstellen (z. B. APIs)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;-vorteile---herausforderungen&#34;&gt;✅ Vorteile &amp;amp; ⚠️ Herausforderungen&lt;/h3&gt;
&lt;p&gt;✅ &lt;strong&gt;Vorteile&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
