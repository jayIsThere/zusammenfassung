<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Jays Zusammenfassung</title>
    <link>https://jayIsThere.github.io/zusammenfassung/posts/</link>
    <description>Recent content in Posts on Jays Zusammenfassung</description>
    <generator>Hugo -- 0.146.6</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Apr 2025 18:13:15 +0200</lastBuildDate>
    <atom:link href="https://jayIsThere.github.io/zusammenfassung/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vorlesung 3: komponentenbasiertes Software-Engineering</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/kbe/kbe3/</link>
      <pubDate>Thu, 17 Apr 2025 18:13:15 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/kbe/kbe3/</guid>
      <description>&lt;h3 id=&#34;grundprinzipien-des-komponentenbasierten-software-engineerings&#34;&gt;Grundprinzipien des komponentenbasierten Software-Engineerings&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Unabhängige Komponenten&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vollständig konfigurierbar über ihre Schnittstellen&lt;/li&gt;
&lt;li&gt;Schnittstelle klar getrennt von der Implementierung&lt;/li&gt;
&lt;li&gt;Austauschbar ohne Änderung am System&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Komponentenstandards&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Einheitliche Schnittstellendefinition &amp;amp; Integration&lt;/li&gt;
&lt;li&gt;Umsetzung über Komponentenmodelle, z. B.:
&lt;ul&gt;
&lt;li&gt;Schnittstellenbeschreibung&lt;/li&gt;
&lt;li&gt;Kommunikationsweise zwischen Komponenten&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Middleware&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Serverseitige Unterstützung für:
&lt;ul&gt;
&lt;li&gt;Kommunikation verteilter Komponenten&lt;/li&gt;
&lt;li&gt;Ressourcenmanagement&lt;/li&gt;
&lt;li&gt;Transaktionsverwaltung, Sicherheit, Parallelität&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Komponentenorientierter Entwicklungsprozess&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Anforderungen an vorhandene Komponenten anpassbar&lt;/li&gt;
&lt;li&gt;Wiederverwendung während Planung &amp;amp; Entwicklung&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-probleme--herausforderungen-im-kbse&#34;&gt;⚠️ Probleme &amp;amp; Herausforderungen im KBSE&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Vertrauenswürdigkeit der Komponenten&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blackbox-Natur erschwert Vertrauen&lt;/li&gt;
&lt;li&gt;Kein Quellcode = wenig Transparenz&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Komponentenzertifizierung&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>KBE Übung 2</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/kbe/kbe_uebung2/</link>
      <pubDate>Thu, 17 Apr 2025 18:08:32 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/kbe/kbe_uebung2/</guid>
      <description>&lt;h2 id=&#34;übungsblatt-2&#34;&gt;Übungsblatt 2&lt;/h2&gt;
&lt;h3 id=&#34;aufgabe-1-beweggründe-für-die-entstehung-des-komponentenbasierten-software-engineerings&#34;&gt;Aufgabe 1. Beweggründe für die Entstehung des Komponentenbasierten Software-Engineerings&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Wiederverwendbarkeit&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Softwarekomponenten können wiederverwendet werden, was Entwicklungszeit und Kosten spart.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Modularität&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Komponenten sind unabhängig, was Wartung und Erweiterung vereinfacht.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Flexibilität&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Komponenten können ausgetauscht werden, ohne das gesamte System zu ändern.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Skalierbarkeit&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Komponenten können unabhängig skaliert und optimiert werden.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;aufgabe-2-vier-grundlagen-des-komponentenbasierten-software-engineerings&#34;&gt;Aufgabe 2. Vier Grundlagen des Komponentenbasierten Software-Engineerings&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Unabhängige Komponenten&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Komponenten können ohne Systemänderungen ausgetauscht werden.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Komponentenstandards&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Einheitliche Schnittstellen und Integrationen sind wichtig.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Middleware&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vorlesung 3: Abgrenzung Festnetz/Cloud zum Mobilnetz</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/mcc/mcc3/</link>
      <pubDate>Tue, 15 Apr 2025 18:22:16 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/mcc/mcc3/</guid>
      <description>&lt;h3 id=&#34;abgrenzung-festnetzcloud-zum-mobilnetz&#34;&gt;Abgrenzung Festnetz/Cloud zum Mobilnetz&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;🔧 Messgeräte&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spektrumanalysator: Zeigt Frequenzspektrum eines Signals.&lt;/li&gt;
&lt;li&gt;Oszilloskop: Zeigt Zeitverlauf eines Signals.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;📈 Messgrößen &amp;amp; Vergleich zu Audio&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Funktechnik&lt;/th&gt;
          &lt;th&gt;Audiotechnik&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Leistung&lt;/td&gt;
          &lt;td&gt;Lautstärke&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;/td&gt;
          &lt;td&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Mittenfrequenz&lt;/td&gt;
          &lt;td&gt;Tonhöhe&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;⚡ Leistungsmessung&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Einheit: Watt (W), oft Milliwatt (mW)&lt;/li&gt;
&lt;li&gt;1 W = 1000 mW&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;📊 Dynamik &amp;amp; logarithmische Darstellung&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Große Unterschiede: z.B. 20W ↔ 0.00000000003mW → Verhältnis = 666.7 Billionen&lt;/li&gt;
&lt;li&gt;Lösung: &lt;strong&gt;logarithmischer Maßstab&lt;/strong&gt; mit &lt;strong&gt;Bel&lt;/strong&gt; und &lt;strong&gt;Dezibel (dB)&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;1 Bel = 10 dB&lt;/li&gt;
&lt;li&gt;Beispiel: 20W = &lt;strong&gt;43 dBm&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;🔢 Berechnung: dBm&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prompt Engineering for Feedback - Literature</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/prompt/literature/</link>
      <pubDate>Mon, 14 Apr 2025 18:57:06 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/prompt/literature/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;Alnajashi, A. (2024). Investigating the accuracy of large language models ’chatgpt-4’ in grading students’ writing according to a specific rubric.&lt;/li&gt;
&lt;li&gt;Hackl, V., M¨ uller, A. E., Granitzer, M., and Sailer, M. (2023). Is gpt-4 a reliable rater? evaluating consistency in gpt-4’s text ratings. Frontiers in Education, 8.&lt;/li&gt;
&lt;li&gt;Jacobsen, L. and Weber, K. (2023). The promises and pitfalls of chatgpt as a feedback provider in higher education: An exploratory study of prompt engineering and the quality of ai-driven feedback.&lt;/li&gt;
&lt;li&gt;Jukiewicz, M. (2024). The future of grading programming assignments in education: The role of chatgpt in automating the assessment and feedback process. Thinking Skills and Creativity, 52:101522.&lt;/li&gt;
&lt;li&gt;Lee, G.-G., Latif, E., Wu, X., Liu, N., and Zhai, X. (2024a). Applying large language models and chain-of-thought for automatic scoring. Computers and Education: Artificial Intelligence, 6:100213.&lt;/li&gt;
&lt;li&gt;Meyer, J., Jansen, T., Schiller, R., Liebenow, L. W., Steinbach, M., Horbach, A., and Fleckenstein, J. (2024). Using llms to bring evidence-based feedback into the classroom: Ai-generated feedback increases secondary students’ text revision, motivation, and positive emotions. Computers and Education: Artificial Intelligence,
6:100199.&lt;/li&gt;
&lt;li&gt;Stahl, M., Biermann, L., Nehring, A., and Wachsmuth, H.(2024). Exploring llm prompting strategies for joint essay scoring and feedback generation. Leibniz University Hannover.&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Prompt Engineering for Feedback - Schema</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/prompt/schema/</link>
      <pubDate>Mon, 14 Apr 2025 18:57:06 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/prompt/schema/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;ChatGPT를 활용한 프로그래밍 과제 평가
ChatGPT는 정확하고 일관된 평가자가 될 수 있음.
교사 평가와 ChatGPT 평가 간 상관계수 r ≈ 0.81로 상당히 높은 일치도.
단, ChatGPT가 더 엄격하게 점수를 부여하는 경향 있음.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;프롬프트 설계의 핵심 전략:
AI가 직접 자체 정답을 생성하고, 이를 학생 코드와 비교해 평가하도록 설계함.
결과는 **정답/부분 정답/오답 (1, 0.5, 0점)**으로 나뉨.
**반복 평가(15회)**를 통해 ChatGPT의 일관성을 확인했고, 7회 이상 평가 후 평균값 또는 최빈값 사용 시 신뢰도 향상.
장점: 빠른 평가, 피드백 생성, 편향 없음, 표준 준수 강조.
단점: 환각 가능성, 비용, 재현 불가성, 교사 개입 필요성.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prompt Engineering for Feedback - Structure</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/prompt/structure/</link>
      <pubDate>Mon, 14 Apr 2025 18:57:06 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/prompt/structure/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;피드백 자동화 과정&lt;/li&gt;
&lt;/ol&gt;
  &lt;img src=&#34;https://jayIsThere.github.io/zusammenfassung/images/data_collection_structure.png&#34; style=&#34;display: block; margin: auto;&#34;&gt;</description>
    </item>
    <item>
      <title>04-14-2025</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/dev_note/2025-04-14/</link>
      <pubDate>Mon, 14 Apr 2025 18:33:36 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/dev_note/2025-04-14/</guid>
      <description>&lt;h2 id=&#34;java-spring-boot&#34;&gt;Java Spring Boot&lt;/h2&gt;
&lt;h3 id=&#34;april-13-2025&#34;&gt;April 13, 2025&lt;/h3&gt;
&lt;p&gt;Java Spring Boot (Login-function)&lt;/p&gt;
&lt;p&gt;What I worked on:
Tried to center a div. That’s it. Sounds simple, right? Nope.&lt;/p&gt;
&lt;p&gt;What went wrong:
I tried margin: auto, then flexbox, then grid. Somehow, it still didn’t look right on mobile.&lt;/p&gt;
&lt;p&gt;What I learned:
Viewport units can mess with your layout if you&amp;rsquo;re not careful. Also: never trust a div.&lt;/p&gt;
&lt;p&gt;Next Steps:
Look into responsive design best practices. Maybe try Tailwind CSS.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vorlesung 2: Ethics and Laws, Network Access Layer</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/nsa/nsa1/</link>
      <pubDate>Mon, 14 Apr 2025 18:32:03 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/nsa/nsa1/</guid>
      <description>&lt;h3 id=&#34;ethics-and-laws&#34;&gt;Ethics and Laws&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Lecture Objectives:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Understand risks in a connected world.&lt;/li&gt;
&lt;li&gt;Learn IT security protection goals.&lt;/li&gt;
&lt;li&gt;Explore types of attacks and legal aspects.&lt;/li&gt;
&lt;li&gt;Discuss ethical concerns in data protection.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;key-it-security-concepts&#34;&gt;Key IT Security Concepts:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;IT Security&lt;/strong&gt;: Ensures data confidentiality, integrity, and availability.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Information Security&lt;/strong&gt;: Protects information, even offline.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cybersecurity&lt;/strong&gt;: Focuses on internet-related information security.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Protection Goals:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Confidentiality&lt;/strong&gt;: Only authorized users can access data.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrity&lt;/strong&gt;: Data must remain unaltered.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Availability&lt;/strong&gt;: Information must be accessible when needed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;types-of-attacks&#34;&gt;Types of Attacks:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;M:1 (Multiple-to-One)&lt;/strong&gt;: Many attackers target one victim (e.g., &lt;strong&gt;Denial of Service (DoS)&lt;/strong&gt; attack).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1:N (One-to-Many)&lt;/strong&gt;: One attacker targets several victims (e.g., &lt;strong&gt;Ping Scan&lt;/strong&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;M:N (Many-to-Many)&lt;/strong&gt;: Multiple attackers and victims (e.g., &lt;strong&gt;Spam&lt;/strong&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1:1 (One-to-One)&lt;/strong&gt;: One attacker targets one victim (e.g., &lt;strong&gt;Port Scan&lt;/strong&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;ethical-aspects&#34;&gt;Ethical Aspects:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;White Hat Hackers&lt;/strong&gt;: Ethical hackers who improve security.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Black Hat Hackers&lt;/strong&gt;: Cybercriminals who exploit vulnerabilities.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gray Hat Hackers&lt;/strong&gt;: Find vulnerabilities but act without malicious intent.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;legal-framework&#34;&gt;Legal Framework:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GDPR&lt;/strong&gt;: EU regulation protecting personal data, with heavy fines for violations.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;network-threats&#34;&gt;Network Threats:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Passive Attacks&lt;/strong&gt;: Attackers intercept data (e.g., traffic analysis).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Active Attacks&lt;/strong&gt;: Attackers modify data or disrupt services (e.g., &lt;strong&gt;DoS&lt;/strong&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;the-network-access-layer&#34;&gt;The Network Access Layer&lt;/h3&gt;
&lt;h4 id=&#34;mac-address-spoofing--arp-poisoning&#34;&gt;MAC Address Spoofing &amp;amp; ARP Poisoning&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Positive Aspects of MAC Spoofing:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>KBE Übung 1</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/kbe/kbe_uebung1/</link>
      <pubDate>Thu, 10 Apr 2025 18:08:29 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/kbe/kbe_uebung1/</guid>
      <description>&lt;h2 id=&#34;übungsblatt-1&#34;&gt;Übungsblatt 1&lt;/h2&gt;
&lt;h3 id=&#34;aufgabe-1-grundstrategie-des-software-engineerings&#34;&gt;Aufgabe 1. Grundstrategie des Software-Engineerings&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Ziel der Wiederverwendung&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Wiederverwendung vorhandener Software, statt neue Software von Grund auf zu entwickeln.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;aufgabe-2-aspekte-die-den-ansatz-getrieben-haben&#34;&gt;Aufgabe 2. Aspekte, die den Ansatz getrieben haben:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Geringere Produktions- und Wartungskosten&lt;/li&gt;
&lt;li&gt;Schnellere Auslieferung von Systemen&lt;/li&gt;
&lt;li&gt;Höhere Softwarequalität&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;aufgabe-3-beispiele-für-etablierte-wiederverwendbare-software&#34;&gt;Aufgabe 3. Beispiele für etablierte wiederverwendbare Software:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Open Source Code (z. B. Apache Commons)&lt;/li&gt;
&lt;li&gt;ERP-Systeme (z. B. SAP)&lt;/li&gt;
&lt;li&gt;Komponentenbibliotheken&lt;/li&gt;
&lt;li&gt;Webservices (z. B. PayPal)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;aufgabe-4-größenordnungen-von-softwareeinheiten-von-groß-nach-klein&#34;&gt;Aufgabe 4. Größenordnungen von Softwareeinheiten (von groß nach klein):&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Systeme&lt;/li&gt;
&lt;li&gt;Anwendungen&lt;/li&gt;
&lt;li&gt;Softwareproduktlinien&lt;/li&gt;
&lt;li&gt;Komponenten&lt;/li&gt;
&lt;li&gt;Objekte und Funktionen&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;aufgabe-5-beispiele-für-jede-größenordnung&#34;&gt;Aufgabe 5. Beispiele für jede Größenordnung:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;System&lt;/strong&gt;: Ein ERP-System, z. B. SAP&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Anwendung&lt;/strong&gt;: Ein CRM-System&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Produktlinie&lt;/strong&gt;: Softwarelinie für medizinische Geräte&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Komponente&lt;/strong&gt;: Zahlungsmodul&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Funktion/Objekt&lt;/strong&gt;: Logging-Klasse aus Apache Commons&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;aufgabe-6-vorteile-der-wiederverwendung&#34;&gt;Aufgabe 6. Vorteile der Wiederverwendung:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Geringere Kosten&lt;/li&gt;
&lt;li&gt;Höhere Zuverlässigkeit&lt;/li&gt;
&lt;li&gt;Geringeres Entwicklungsrisiko&lt;/li&gt;
&lt;li&gt;Schnellere Markteinführung&lt;/li&gt;
&lt;li&gt;Effektiver Einsatz von Experten&lt;/li&gt;
&lt;li&gt;Standardkonformität&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;aufgabe-6-probleme-der-wiederverwendung&#34;&gt;Aufgabe 6. Probleme der Wiederverwendung:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Höhere Wartungskosten&lt;/li&gt;
&lt;li&gt;Mangel an Werkzeugunterstützung&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Not-invented-here&amp;rdquo;-Syndrom&lt;/li&gt;
&lt;li&gt;Hoher Aufwand für Bibliotheksverwaltung&lt;/li&gt;
&lt;li&gt;Schwierige Suche und Anpassung von Komponenten&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;aufgabe-7-planung-der-wiederverwendung&#34;&gt;Aufgabe 7. Planung der Wiederverwendung&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Vier Schlüsselfaktoren:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vorlesung 2: Wiederverwendung von Software 2</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/kbe/kbe2/</link>
      <pubDate>Thu, 10 Apr 2025 18:04:15 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/kbe/kbe2/</guid>
      <description>&lt;h3 id=&#34;wiederverwendungstechniken-laut-sommerville&#34;&gt;Wiederverwendungstechniken (laut Sommerville)&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Frameworks&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Definition:&lt;/strong&gt; Ein Framework ist ein Set von Softwarekomponenten, das eine Architektur für verwandte Anwendungen bereitstellt.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beispiel:&lt;/strong&gt; Ein Web-Framework wie Spring MVC verwendet das Model-View-Controller-Muster.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Eigenschaft:&lt;/strong&gt; Bietet generische Funktionalität und wird erweitert, nicht ersetzt.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Inversion of Control (IoC)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prinzip:&lt;/strong&gt; Die Steuerung liegt beim Framework, nicht bei der Anwendung. Die Anwendung registriert ihre Komponenten, und das Framework ruft sie bei Bedarf auf.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beispiel:&lt;/strong&gt; Callbacks in Web-Frameworks.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Entwurfsmuster&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Beispiel:&lt;/strong&gt; Observer, Strategy sind gängige Muster, um wiederkehrende Probleme zu lösen.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Architekturmuster&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vorlesung 2: Konzeptionierung von Apps</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/mad/mad1/</link>
      <pubDate>Wed, 09 Apr 2025 18:30:37 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/mad/mad1/</guid>
      <description>&lt;h3 id=&#34;konzeptentwicklung&#34;&gt;Konzeptentwicklung&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Zweck/Ziele&lt;/strong&gt;: Was ist das Hauptziel der App?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Beispiel: Eine Fitness-App, die Nutzern hilft, ihre täglichen Schritte zu verfolgen.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Zielgruppe&lt;/strong&gt;: Wer sind die Nutzer*innen?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Beispiel: Berufspendler, die ihre Fitness im Alltag verbessern möchten.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Mehrwert&lt;/strong&gt;: Was unterscheidet die App von Konkurrenzprodukten?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Beispiel: Bietet personalisierte Fitnesspläne basierend auf dem täglichen Bewegungslevel.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Marktanalyse&lt;/strong&gt;: Analyse der Konkurrenz und Definition der Alleinstellungsmerkmale.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Beispiel: Analyse von Fitbit, Apple Health, und Google Fit, um Funktionen zu verbessern.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Feature Definition&lt;/strong&gt;: Festlegung des MVP (Minimum Viable Product) und Priorisierung.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MCC Übung 1</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/mcc/mcc_uebung1/</link>
      <pubDate>Tue, 08 Apr 2025 18:23:41 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/mcc/mcc_uebung1/</guid>
      <description>&lt;h4 id=&#34;11-use-case-video-streaming-zu-hause&#34;&gt;1.1 Use Case: Video-Streaming zu Hause&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Szenario:&lt;/strong&gt;&lt;br&gt;
Sie streamen ein Video zu Hause, Audio über Bluetooth-Box, Bild auf dem Tablet.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;a) Topologie-Skizze:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Server (Provider X)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;→ &lt;strong&gt;Internet&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;→ &lt;strong&gt;Router&lt;/strong&gt; (ortsgebunden, Heimnetzwerk)&lt;/li&gt;
&lt;li&gt;→ &lt;strong&gt;Tablet&lt;/strong&gt; (mobil, zeigt das Video über WLAN)&lt;/li&gt;
&lt;li&gt;→ &lt;strong&gt;Bluetooth Box&lt;/strong&gt; (mobil, empfängt Audio)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;b) Verbindungsarten:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Festnetz:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Verbindung Server ↔ Internet ↔ Router&lt;/li&gt;
&lt;li&gt;WLAN (als Heimnetzwerk-Verbindung)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Funk:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bluetooth zwischen Tablet ↔ Box&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;c) Mobile vs. ortsfeste Knoten:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Mobil:&lt;/strong&gt; Tablet, Bluetooth Box&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ortsfest:&lt;/strong&gt; Server, Router&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;d) Vermutete Funktechnologien:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vorlesung 2: Was ist Bit? &amp; Übung</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/mcc/mcc2/</link>
      <pubDate>Tue, 08 Apr 2025 18:22:14 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/mcc/mcc2/</guid>
      <description>&lt;h3 id=&#34;informationen-und-informationsgehalt&#34;&gt;Informationen und Informationsgehalt&lt;/h3&gt;
&lt;p&gt;Der &lt;strong&gt;Informationsgehalt&lt;/strong&gt; beschreibt, wie viel „Überraschung“ oder „Neuigkeit“ in einem Ereignis steckt – je unwahrscheinlicher ein Ereignis, desto mehr Information trägt es.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Formel zur Berechnung:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I(p) = −log₂(p)&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;p&lt;/strong&gt; ist die Wahrscheinlichkeit des Ereignisses&lt;/li&gt;
&lt;li&gt;Ein &lt;strong&gt;sicheres Ereignis&lt;/strong&gt; (p = 1) hat &lt;strong&gt;keinen Informationsgehalt&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Ein &lt;strong&gt;zufälliges Ereignis&lt;/strong&gt; (p = 0,5) liefert &lt;strong&gt;1 Bit Information&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Ein &lt;strong&gt;seltenes Ereignis&lt;/strong&gt; (z.B. Lottogewinn mit p = 0,0000001) liefert &lt;strong&gt;~26,57 Bit&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;beispiel-1-münzwurf&#34;&gt;Beispiel 1: Münzwurf&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Wahrscheinlichkeit: &lt;strong&gt;p = 0,5&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Informationsgehalt:
&lt;blockquote&gt;
&lt;p&gt;I(0,5) = −log₂(0,5) = &lt;strong&gt;1 Bit&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vorlesung 1: Wiederverwendung von Software 1</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/kbe/kbe1/</link>
      <pubDate>Thu, 03 Apr 2025 17:19:30 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/kbe/kbe1/</guid>
      <description>&lt;h3 id=&#34;einführung-in-die-softwarewiederverwendung&#34;&gt;Einführung in die Softwarewiederverwendung&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Definition:&lt;/strong&gt; Wiederverwendung bestehender Softwarekomponenten (z. B. Code, Module, Systeme)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Motivation:&lt;/strong&gt; Geringere Kosten, höhere Qualität, schnellere Markteinführung&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Relevanz:&lt;/strong&gt; Besonders wichtig seit 2000 durch wachsende Softwarekomplexität und Kostendruck&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;skalierung-wiederverwendbarer-softwareeinheiten&#34;&gt;Skalierung wiederverwendbarer Softwareeinheiten&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Systeme von Systemen:&lt;/strong&gt; Integration ganzer Systeme&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Anwendungssysteme:&lt;/strong&gt; Konfigurierbare Standardsoftware&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Anwendungsfamilien / Produktlinien:&lt;/strong&gt; Gemeinsame Architektur mit Anpassungsmöglichkeiten&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Komponenten:&lt;/strong&gt; Module mittlerer Granularität&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Objekte und Funktionen:&lt;/strong&gt; Kleinste Einheiten, oft in Bibliotheken&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;vorteile-der-wiederverwendung&#34;&gt;Vorteile der Wiederverwendung&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Kosten- und Zeitersparnis:&lt;/strong&gt; Weniger Entwicklung und Validierung notwendig&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zuverlässigkeit:&lt;/strong&gt; Durch getestete und bewährte Komponenten&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bessere Ressourcennutzung:&lt;/strong&gt; Spezialisten und Standards werden besser genutzt&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Konsistenz und Standardisierung:&lt;/strong&gt; Z. B. bei UI-Komponenten&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;probleme-der-wiederverwendung&#34;&gt;Probleme der Wiederverwendung&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Wartungsprobleme:&lt;/strong&gt; Unbekannter Quellcode führt zu Problemen bei Wartung und Erweiterung&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Geringe Werkzeugunterstützung:&lt;/strong&gt; Besonders für eingebettete Systeme&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;„Not-invented-here“-Syndrom:&lt;/strong&gt; Widerstand gegen externe Komponenten&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Aufwand für Komponentenbibliotheken:&lt;/strong&gt; Aufbau und Pflege sind arbeitsintensiv&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Anpassung erfordert Expertise:&lt;/strong&gt; Finden und anpassen von Komponenten ist komplex&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Vorlesung 1: Einführung in Mobile and Cloud Computing</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/mcc/mcc1/</link>
      <pubDate>Tue, 01 Apr 2025 18:22:11 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/mcc/mcc1/</guid>
      <description>&lt;h3 id=&#34;abgrenzung-festnetzcloud-zum-mobilnetz&#34;&gt;Abgrenzung Festnetz/Cloud zum Mobilnetz&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Festnetz&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Endgeräte sind ortsfest und verkabelt&lt;br&gt;
&lt;em&gt;(z.B. Desktop-PCs, Telefone, Drucker)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Mobilnetz&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Endgeräte sind mobil und verbinden sich via Funkverbindung&lt;/li&gt;
&lt;li&gt;Kombination aus festem und mobilem Teil, da nicht alle Verbindungen sinnvollerweise mobil sind&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Cloud&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nutzt Festnetzverbindungen, aber bietet zusätzlich:
&lt;ul&gt;
&lt;li&gt;Computing&lt;/li&gt;
&lt;li&gt;Speicherung&lt;/li&gt;
&lt;li&gt;Virtualisierung&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cloud ist mehr als nur ein Transportnetz&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;funkverbindung-und-frequenz&#34;&gt;Funkverbindung und Frequenz&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;In mobilen Netzen wird statt Kabel/Glasfaser ein &lt;strong&gt;Funksignal&lt;/strong&gt; genutzt&lt;/li&gt;
&lt;li&gt;Eine Funkverbindung basiert auf:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Frequenz&lt;/strong&gt; (z.B. WLAN: 2412 MHz)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bandbreite&lt;/strong&gt; (z.B. 20 MHz)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Sender und Empfänger&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>SLA Probeklausur</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/sla/sla_klausur/</link>
      <pubDate>Mon, 10 Mar 2025 18:35:42 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/sla/sla_klausur/</guid>
      <description>&lt;h2 id=&#34;probeklausur&#34;&gt;Probeklausur&lt;/h2&gt;
&lt;h4 id=&#34;probeklausur-1&#34;&gt;Probeklausur 1&lt;/h4&gt;
&lt;h4 id=&#34;probeklausur-2&#34;&gt;Probeklausur 2&lt;/h4&gt;</description>
    </item>
    <item>
      <title>Lineare Algebra Bonusaufgabe</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/sla/sla_la_bonus/</link>
      <pubDate>Mon, 03 Mar 2025 18:36:16 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/sla/sla_la_bonus/</guid>
      <description></description>
    </item>
    <item>
      <title>Lineare Algebra Übung</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/sla/sla_la_uebung/</link>
      <pubDate>Sun, 02 Mar 2025 18:34:00 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/sla/sla_la_uebung/</guid>
      <description>&lt;h3 id=&#34;übungsblatt-lineare-algebra&#34;&gt;Übungsblatt (Lineare Algebra)&lt;/h3&gt;
&lt;hr&gt;
&lt;h4 id=&#34;übungsblatt-1&#34;&gt;Übungsblatt 1&lt;/h4&gt;
  &lt;img src=&#34;https://jayIsThere.github.io/zusammenfassung/images/uebungsblatt1-1.jpg&#34; width=&#34;450px&#34; height=&#34;430px&#34; style=&#34;display: block; margin: auto;&#34;&gt;
  &lt;img src=&#34;https://jayIsThere.github.io/zusammenfassung/images/uebungsblatt1-2.jpg&#34; width=&#34;450px&#34; height=&#34;430px&#34; style=&#34;display: block; margin: auto;&#34;&gt;
  &lt;img src=&#34;https://jayIsThere.github.io/zusammenfassung/images/uebungsblatt1-3.jpg&#34; width=&#34;450px&#34; height=&#34;430px&#34; style=&#34;display: block; margin: auto;&#34;&gt;
  &lt;img src=&#34;https://jayIsThere.github.io/zusammenfassung/images/uebungsblatt1-4.jpg&#34; width=&#34;450px&#34; height=&#34;430px&#34; style=&#34;display: block; margin: auto;&#34;&gt;
&lt;h4 id=&#34;übungsblatt-2&#34;&gt;Übungsblatt 2&lt;/h4&gt;
&lt;h4 id=&#34;übungsblatt-3&#34;&gt;Übungsblatt 3&lt;/h4&gt;
&lt;h4 id=&#34;übungsblatt-4&#34;&gt;Übungsblatt 4&lt;/h4&gt;</description>
    </item>
    <item>
      <title>Vektor- und Matrix-Formeln</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/sla/sla_la/</link>
      <pubDate>Sat, 01 Mar 2025 18:33:36 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/sla/sla_la/</guid>
      <description>&lt;h3 id=&#34;vektor-formeln&#34;&gt;Vektor-Formeln&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Skalarprodukt (Dot Product)&lt;/strong&gt;&lt;br&gt;
Das Skalarprodukt von zwei Vektoren \( \mathbf{u}, \mathbf{v} \in \mathbb{R}^n \) ist definiert als:
$$
   \mathbf{u} \cdot \mathbf{v} = \sum_{i=1}^{n} u_i v_i
   $$&lt;/li&gt;
&lt;/ol&gt;
  &lt;img src=&#34;https://jayIsThere.github.io/zusammenfassung/images/skalarprodukt.jpg&#34; width=&#34;450px&#34; height=&#34;430px&#34; style=&#34;display: block; margin: auto;&#34;&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;Vektorlänge (Norm)&lt;/strong&gt;&lt;br&gt;
Die Länge (Norm) eines Vektors \( \mathbf{a} \in \mathbb{R}^n \) ist gegeben durch:
$$
   |\mathbf{a}| = \sqrt{a_1^2 + a_2^2 + \dots + a_n^2}
   $$&lt;/li&gt;
&lt;/ol&gt;
  &lt;img src=&#34;https://jayIsThere.github.io/zusammenfassung/images/vektorlaenge.jpg&#34; width=&#34;450px&#34; height=&#34;430px&#34; style=&#34;display: block; margin: auto;&#34;&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;Winkel zwischen Vektoren (Angle between Vectors)&lt;/strong&gt;&lt;br&gt;
Der Winkel \( \theta \) zwischen den Vektoren \( \mathbf{a}, \mathbf{b} \in \mathbb{R}^n \) wird durch die folgende Formel berechnet:
$$
   \cos(\theta) = \frac{\mathbf{a} \cdot \mathbf{b}}{|\mathbf{a}| |\mathbf{b}|}
   $$&lt;/li&gt;
&lt;/ol&gt;
  &lt;img src=&#34;https://jayIsThere.github.io/zusammenfassung/images/winkel.jpg&#34; width=&#34;450px&#34; height=&#34;430px&#34; style=&#34;display: block; margin: auto;&#34;&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;strong&gt;Orthogonalität (Orthogonality)&lt;/strong&gt;&lt;br&gt;
Zwei Vektoren \( \mathbf{a} \) und \( \mathbf{b} \) sind orthogonal (rechtwinklig), wenn:
$$
   \mathbf{a} \cdot \mathbf{b} = 0
   $$&lt;/li&gt;
&lt;/ol&gt;
  &lt;img src=&#34;https://jayIsThere.github.io/zusammenfassung/images/orthogonal.jpg&#34; width=&#34;450px&#34; height=&#34;430px&#34; style=&#34;display: block; margin: auto;&#34;&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;&lt;strong&gt;Kreuzprodukt (Cross Product) - In 3D&lt;/strong&gt;&lt;br&gt;
Das Kreuzprodukt zweier Vektoren $$ \mathbf{a} = (a_1, a_2, a_3) $$ und $$ \mathbf{b} = (b_1, b_2, b_3)$$  ist:
$$
   \mathbf{a} \times \mathbf{b} = 
   \begin{vmatrix}
   \mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \\
   a_1 &amp; a_2 &amp; a_3 \\
   b_1 &amp; b_2 &amp; b_3
   \end{vmatrix}
   = \left( a_2 b_3 - a_3 b_2, \, a_3 b_1 - a_1 b_3, \, a_1 b_2 - a_2 b_1 \right)
   $$&lt;/li&gt;
&lt;/ol&gt;
  &lt;img src=&#34;https://jayIsThere.github.io/zusammenfassung/images/kreuzprodukt.jpg&#34; width=&#34;450px&#34; height=&#34;430px&#34; style=&#34;display: block; margin: auto;&#34;&gt;
&lt;hr&gt;
&lt;h3 id=&#34;matrix-formeln&#34;&gt;Matrix-Formeln&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Matrixmultiplikation (Matrix Multiplication)&lt;/strong&gt;&lt;br&gt;
Die Multiplikation zweier Matrizen \( A \in \mathbb{R}^{m \times n} \) und \( B \in \mathbb{R}^{n \times p} \) ergibt:
$$
   C = AB, \quad C_{ij} = \sum_{k=1}^{n} A_{ik} B_{kj}
   $$&lt;/li&gt;
&lt;/ol&gt;
  &lt;img src=&#34;https://jayIsThere.github.io/zusammenfassung/images/matrix_multiplikation.jpg&#34; width=&#34;450px&#34; height=&#34;430px&#34; style=&#34;display: block; margin: auto;&#34;&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Transponierte Matrix (Transpose of a Matrix)&lt;/strong&gt;&lt;br&gt;
Die Transponierte einer Matrix \( A = [a_{ij}] \) ist:
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nuetzlich</title>
      <link>https://jayIsThere.github.io/zusammenfassung/posts/sla/nuetzlich/</link>
      <pubDate>Thu, 20 Feb 2025 18:57:06 +0200</pubDate>
      <guid>https://jayIsThere.github.io/zusammenfassung/posts/sla/nuetzlich/</guid>
      <description>&lt;h4 id=&#34;nützliche-website&#34;&gt;Nützliche Website&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Matrizenrechner&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://matrixcalc.org/&#34;&gt;https://matrixcalc.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
  </channel>
</rss>
